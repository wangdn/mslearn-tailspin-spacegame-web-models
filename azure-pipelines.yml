pool:
  vmImage: 'ubuntu-20.04'

variables:
  buildConfiguration: 'Release'
  dotnetSdkVersion: '6.x'

steps:
  - task: UseDotNet@2
    displayName: 'Use .NET SDK $(dotnetSdkVersion)'
    inputs:
      version: '$(dotnetSdkVersion)'

  - task: DotNetCoreCLI@2
    displayName: 'Restore project dependencies'
    inputs:
      command: 'restore'
      projects: '**/*.csproj'

  - task: DotNetCoreCLI@2
    displayName: 'Build the project - $(buildConfiguration)'
    inputs:
      command: 'build'
      arguments: '--no-restore --configuration $(buildConfiguration)'
      projects: '**/*.csproj'

  # - task: DotNetCoreCLI@2
  #   displayName: 'Pack the project - $(buildConfiguration)'
  #   inputs:
  #     command: 'pack'
  #     projects: '**/*.csproj'
  #     arguments: '--no-build --configuration $(buildConfiguration)'
  #     versioningScheme: byPrereleaseNumber
  #     majorVersion: '1'
  #     minorVersion: '0'
  #     patchVersion: '0'

  # - task: NuGetCommand@2
  #   displayName: 'Publish NuGet package'
  #   inputs:
  #     command: push
  #     feedPublish: '$(System.TeamProject)/Tailspin.SpaceGame.Web.Models'
  #     allowPackageConflicts: true
  #   condition: succeeded()

- task: UniversalPackages@0
  displayName: Universal Publish
  inputs:
    command: publish
    publishDirectory: '**/*.csproj'
    vstsFeedPublish: '$(System.TeamProject)/Tailspin.SpaceGame.Web.Models'
    vstsFeedPackagePublish: 'testPackage'
    versionOption: minor
    # versionPublish: '1.1.0-CI-20220823-061827'
    packagePublishDescription: 'Publish a Universal Package'
